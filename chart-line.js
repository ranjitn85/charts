import{_ as _decorate,s,e,a as _get,b as _getPrototypeOf,C as Chart,c as _toConsumableArray,x,d as _taggedTemplateLiteral,f as e$1,g as _inherits,h as _createSuper,i as _createClass,j as _classCallCheck,k as _assertThisInitialized,r as registerables}from"./chart-48d074a4.js";var _templateObject,config={controlName:"chart-line",groupName:"Charts",fallbackDisableSubmit:!1,description:"Creates a lines chart",version:"1.0",properties:{chartData:{type:"string",title:"Data Array"},displayLegend:{type:"boolean",title:"Display Legend"},datasetlabel:{type:"string",title:"Dataset Label"}},events:["ntx-value-change"],standardProperties:{fieldLabel:!0,description:!0,defaultValue:!0,readOnly:!0,visibility:!0}},styles=[],LineChart=_decorate([e$1("chart-line")],function(s,t){var a=function(){_inherits(i,t);var n=_createSuper(i);function i(){var e;_classCallCheck(this,i);for(var t=arguments.length,a=new Array(t),r=0;r<t;r++)a[r]=arguments[r];return e=n.call.apply(n,[this].concat(a)),s(_assertThisInitialized(e)),e}return _createClass(i)}();return{F:a,d:[{kind:"field",static:!0,key:"getMetaConfig",value:function(){return function(){return Promise.resolve(config)}}},{kind:"field",static:!0,key:"styles",value:function(){return styles}},{kind:"field",decorators:[e({type:String})],key:"chartData",value:void 0},{kind:"field",decorators:[e({type:String})],key:"datasetlabel",value:void 0},{kind:"field",decorators:[e({type:Boolean})],key:"displayLegend",value:void 0},{kind:"field",key:"chartContainer",value:void 0},{kind:"field",key:"chartInstance",value:void 0},{kind:"method",key:"updated",value:function(e){_get(_getPrototypeOf(a.prototype),"updated",this).call(this,e),e.has("chartData")&&this.updateChart()}},{kind:"method",key:"updateChart",value:function(){var e,t=void 0===this.displayLegend||this.displayLegend,a=(console.log(t),this.parseChartData());a&&0!==a.length&&(this.chartInstance&&this.chartInstance.destroy(),this.chartContainer=document.createElement("canvas"),null!=(e=this.shadowRoot)&&e.appendChild(this.chartContainer),this.chartInstance?(this.chartInstance.data.labels=a.map(function(e){return e.label}),this.chartInstance.data.datasets=[{label:this.datasetlabel,data:a.map(function(e){return e.value}),fill:!1}],this.chartInstance.update()):(Chart.register.apply(Chart,_toConsumableArray(registerables)),this.chartInstance=new Chart(this.chartContainer.getContext("2d"),{type:"line",data:{labels:a.map(function(e){return e.label}),datasets:[{label:this.datasetlabel,data:a.map(function(e){return e.value}),fill:!1}]},options:{plugins:{legend:{display:t}}}})))}},{kind:"method",key:"parseChartData",value:function(){var e;try{e=JSON.parse(this.chartData)}catch(e){return console.error("Error parsing JSON:",e),null}return Array.isArray(e)&&0!==e.length?e:null}},{kind:"method",key:"render",value:function(){return x(_templateObject=_templateObject||_taggedTemplateLiteral([""]))}}]}},s);export{LineChart};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
